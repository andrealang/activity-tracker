apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logdna-agent-activity-tracker
  labels:
    app: logdna-agent
spec:
  selector:
    matchLabels:
      app: logdna-agent
  template:
    metadata:
      labels:
        app: logdna-agent
    spec:
      containers:
      - name: logdna-agent-activity-tracker
        image: logdna/logdna-agent-v2:stable
        imagePullPolicy: Always
        env:
        - name: LOGDNA_AGENT_KEY
          valueFrom:
            secretKeyRef:
              name: logdna-agent-key
              key: logdna-agent-key
        - name: LDLOGPATH
          value: '/supertenant/logs/ingest'
        - name: LDAPIHOST
          value: api.private.global.logging.cloud.ibm.com
        - name: LDLOGHOST
          value: logs.private.global.logging.cloud.ibm.com
        - name: LOGDNA_PLATFORM
          value: k8s
        - name: LOGDNA_TAGS
          value: agent-v2
        resources:
          requests:
            cpu: 20m
          limits:
            memory: 300Mi
        volumeMounts:
        - name: varlogat
          mountPath: /var/log/at
        - name: vardata
          mountPath: /var/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: mnt
          mountPath: /mnt
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
        - name: osrelease
          mountPath: /etc/os-release
        - name: logdnahostname
          mountPath: /etc/logdna-hostname
      volumes:
      - name: varlogat
        hostPath:
          path: /var/log/at
      - name: vardata
        hostPath:
          path: /var/data
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: mnt
        hostPath:
          path: /mnt
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: osrelease
        hostPath:
          path: /etc/os-release
      - name: logdnahostname
        hostPath:
          path: /etc/hostname
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
